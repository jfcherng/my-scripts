#!/bin/sh

### BEGIN INIT INFO
# Provides:          imageproxy
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts imageproxy
# Description:       starts the imageproxy daemon (https://github.com/willnorris/imageproxy)
### END INIT INFO

# There is a service file so you can actually stop using init.d.
# Check this https://github.com/willnorris/imageproxy/blob/master/etc/imageproxy.service

umask 0002

IMAGEPROXY_BIN="/root/go/bin/imageproxy"
PID_FILE="/var/run/imageproxy.pid"

APP_ADDR="localhost:15900"
CACHE_DESTINATION="/tmp/imageproxy"
ALLOWED_CONTENT_TYPES="image/*,image"
USER_AGENT="Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36"

wait_for_pid() {
    try=0

    while test "${try}" -lt 35; do

        case "$1" in
            'created')
                if [ -f "$2" ]; then
                    try=''
                    break
                fi
                ;;

            'removed')
                if [ ! -f "$2" ]; then
                    try=''
                    break
                fi
                ;;
        esac

        echo -n .
        try=$(expr ${try} + 1)
        sleep 1

    done
}

case "$1" in
    start)
        echo -n "Starting imageproxy "

        "${IMAGEPROXY_BIN}" -scaleUp -addr "${APP_ADDR}" -cache "${CACHE_DESTINATION}" -contentTypes "${ALLOWED_CONTENT_TYPES}" -userAgent "${USER_AGENT}" &

        PID=$(echo $!)

        if [ "${PID}" = "" ]; then
            echo " failed"
            exit 1
        else
            echo "${PID}" >"${PID_FILE}"
        fi

        wait_for_pid created "${PID_FILE}"

        if [ -n "${try}" ]; then
            echo " failed"
            exit 1
        else
            echo " done"
        fi
        ;;

    stop)
        echo -n "Gracefully shutting down imageproxy "

        if [ ! -r "${PID_FILE}" ]; then
            echo "warning, no pid file found - imageproxy is not running ?"
            exit 1
        fi

        kill -QUIT $(cat "${PID_FILE}") && rm -f "${PID_FILE}"

        wait_for_pid removed "${PID_FILE}"

        if [ -n "${try}" ]; then
            echo " failed. Use force-quit"
            exit 1
        else
            echo " done"
        fi
        ;;

    status)
        if [ ! -r ${PID_FILE} ]; then
            echo "imageproxy is stopped"
            exit 0
        fi

        PID=$(cat "${PID_FILE}")
        if ps -p "${PID}" | grep -q "${PID}"; then
            echo "imageproxy (pid ${PID}) is running..."
        else
            echo "imageproxy dead but pid file exists"
        fi
        ;;

    force-quit)
        echo -n "Terminating imageproxy "

        if [ ! -r "${PID_FILE}" ]; then
            echo "warning, no pid file found - imageproxy is not running ?"
            exit 1
        fi

        kill -TERM $(cat "${PID_FILE}") && rm -f "${PID_FILE}"

        wait_for_pid removed "${PID_FILE}"

        if [ -n "${try}" ]; then
            echo " failed"
            exit 1
        else
            echo " done"
        fi
        ;;

    restart)
        $0 stop
        $0 start
        ;;

    *)
        echo "Usage: $0 {start|stop|force-quit|restart|status}"
        exit 1
        ;;

esac
